第十一章 使用类
1.操作符重载允许将标准C++操作符用于类对象
2.友元允许非成员函数访问类的私有数据

11.1 操作符重载
1.操作符重载时一种形式的C++多态
2.定义多个特征标不同的相同函数名的函数,叫做函数重载或函数多态,
	使用同名的函数完成相同的基本操作
3.操作符重载将重载的概念使用到操作符上,允许操作符多种含义
4.实际上很多C、C++操作符已经被重载
	eg:	将*操作符用于地址则取出地址中存储的值
		将*用于数字时则将得到它们的乘积
5.C++根据操作数的类型及数目决定采用哪种操作



11.3 友元简介

1.友元:
	突破类的私有成员访问限制,类的公有方法是访问类私有成员的唯一途径
	[1]友元函数
	[2]友元类
	[3]友元成员函数
2.通过让函数成为类的友元,可以赋予该函数与类的成员函数相同的访问权限
3.为什么需要友元:
	在为类重载二元操作符时(带两个参数的操作符)常常需要友元
	eg:	Time类对象乘以实数
		Time operator *(double n)const;
		A = B * 2.75; =>　A = B.operator *(2.75);
		A = 2.75 * B;编译器不能使用相应成员函数进行替换
		左侧的操作数应是Time对象
	解决方案:非成员函数,(大多数操作符都可以通过成员函数或非成员函数重载)
		非成员函数不是由对象调用的,它使用的所有值都是显式参数
		这样编译器能够将A = 2.75 * B;与非成员函数调用匹配A = operator *(2.75,B);
		该函数原型:Time operator *(double m,const Time & t);
		对于非成员重载操作符函数来说,
		操作符左边的操作数对应于操作符函数的第一个参数,
		操作符右边的操作数对应于操作符函数的第二个参数
4.使用非成员函数可以按所需的顺序获得操作数,非成员函数不能访问类的私有数据
	常规非成员函数不能访问,有一类特殊非成员函数可以访问类的私有成员,
	友元函数可以访问类的私有数据