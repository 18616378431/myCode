第十四章 C++中的代码重用

1.公有继承机制可以实现代码重用
2.(1)可以使用类成员是另一个类的对象实现
	这种方法称为包含(containment)、组合(composition)、层次化(layering)
  (2)使用私有或保护继承
3.包含、私有继承和保护继承用于实现has-a关系,新的类包含另一个类的对象
4.多重继承使用能够使用两个或更多的基类派生出新的类,将基类的功能组合在一起
5.类模板可重用代码:类模板使我们能够使用通用术语定义类,然后使用模板创建针对特定类型定义的特殊类

14.1 包含对象成员的类
1.类成员可以是常规类型(int、float、double、char *)的,也可以是另一个类对象
	eg:	使用C++标准库的String对象表示类的字符串属性、使用valarray表示动态分配内存的数组

14.1.1 valarray类简介
1.valarray类是由头文件valarray支持的
2.这个类用于处理数值或具有类似特性的类,它支持诸如将数组中所有元素的值相加、
	以及在数组中查找最大值和最小值等操作
3.valarray类被定义为模板类,以便能够处理不同的数据类型
4.模板特性意味着声明对象时,必须指定具体的数据类型
	eg:	声明valarray对象,在valarray后面加上尖括号并在其中指明数据类型
		valarray<int> q_values;//int array
		valarray<double> weights;//double array
5.valarray用法,使用valarray类对象,构造函数及其他类方法
	eg:	double gpa[5] = {3.1,3.5,3.8,2.9,3.3};
		valarray<double> v1;//double array size 0
		valarray<int> v2(8);//八个int元素的数组
		valarray<int> v3(10,8);//8个int元素的数组,每个元素都设置为值10
		valarray<double> v4(gpa,4);//4个元素的数组,初始化为gpa数组的前四个值
	可以创建长度为0的空数组、指定长度的空数组、所有元素都被指定值初始化的数组、
	以及用常规数组中的值进行初始化的数组
6.valarray类方法
	(1)operator[] :通过下标访问数组元素
	(2)size():	返回数组中包含元素的个数
	(3)sum():	返回所有元素的和
	(4)max():	返回最大的元素
	(5)min():	返回最小的元素
	
14.1.2 Student类的设计
1.可以通过公有继承姓名、分数类多重公有继承来派生学生类,学生类与分数、姓名类不是is-a模型,
	学生不是分数也不是考试成绩,学生与分数、姓名的关系是has-a关系
	学生有姓名和考试成绩
2.用于建立has-a关系的C++技术是组合(包含),即创建一个包含其他类的对象
	eg:	将Student类声明为
		class Student
		{
		private:
			string name;//string object
			valarray<double> scores;//valarray<double> object
			...
		};
	Student类可以通过string、valarray对象的公有接口访问及修改其数据
	Student类外只能通过其公有接口访问及修改其数据
	Student类获得了其成员对象的实现,但没有继承接口
3.接口和实现
	(1)公有继承类可以继承接口,可能还有实现(基类的纯虚函数提供接口,但不提供实现)
	(2)获得接口是is-a关系的组成部分,
	(3)使用组合,类可以获得实现,但不能获取接口
	(4)不继承接口是has-a关系的组成部分
4.has-a关系,类对象不自动获得被包含对象的接口,被包含对象的接口可能对当前类对象时没有意义的
	可以在当前类对象的成员函数内部使用被包含对象的成员函数

14.1.3 Student类范例
	(1).explicit用于构造函数关闭参数类型到类类型的转换,防止隐式转换
	(2).使用const防止方法修改数据
1.初始化被包含的对象
	(1)使用成员初始化列表初始化对象成员
	(2)使用成员初始化列表初始化派生类对象的基类部分
	(3)使用初始化列表初始化内置类型
	(4)初始化列表仅能用于构造函数
	(5)继承的对象,构造函数使用初始化列表通过类名调用特定的基类构造函数
		对于成员对象,构造函数则使用成员名
		eg:	Student(const char & str,const double * pd,int n):name(str),scores(pd,n){}
		因为构造函数初始化的是成员对象,而不是继承的对象,在初始化列表中使用成员名,而不是类名
	(6)C++要求在构建对象的其他部分之前,先构建继承对象的所有成员
		省略初始化列表,C++将使用成员对象类的默认构造函数
	(7)初始化列表的初始顺序:初始化列表初始化多个项目时,这些项目被初始化的顺序为它们被声明的顺序
		而不是它们在初始化列表中的顺序
		eg:	Student(const char * str,const double * pd,int n):scores(n),name(str){}
			name先声明则先初始化
	(8)如果类的一个成员使用另一个成员的值进行初始化,则初始化的顺序就很重要
2.使用被包含对象的接口
	(1)被包含对象的接口不是公有的,但可以在类方法中使用它
	(2)当前类可以使用当前类的公有方法,被包含类可以在当前类内部使用其所属类的方法
3.使用新的Student类
	

		
