第十四章 C++中的代码重用

1.公有继承机制可以实现代码重用
2.(1)可以使用类成员是另一个类的对象实现
	这种方法称为包含(containment)、组合(composition)、层次化(layering)
  (2)使用私有或保护继承
3.包含、私有继承和保护继承用于实现has-a关系,新的类包含另一个类的对象
4.多重继承使用能够使用两个或更多的基类派生出新的类,将基类的功能组合在一起
5.类模板可重用代码:类模板使我们能够使用通用术语定义类,然后使用模板创建针对特定类型定义的特殊类

14.1 包含对象成员的类
1.类成员可以是常规类型(int、float、double、char *)的,也可以是另一个类对象
	eg:	使用C++标准库的String对象表示类的字符串属性、使用valarray表示动态分配内存的数组

14.1.1 valarray类简介
1.valarray类是由头文件valarray支持的
2.这个类用于处理数值或具有类似特性的类,它支持诸如将数组中所有元素的值相加、
	以及在数组中查找最大值和最小值等操作
3.valarray类被定义为模板类,以便能够处理不同的数据类型
4.模板特性意味着声明对象时,必须指定具体的数据类型
	eg:	声明valarray对象,在valarray后面加上尖括号并在其中指明数据类型
		valarray<int> q_values;//int array
		valarray<double> weights;//double array
5.valarray用法,使用valarray类对象,构造函数及其他类方法
	eg:	double gpa[5] = {3.1,3.5,3.8,2.9,3.3};
		valarray<double> v1;//double array size 0
		valarray<int> v2(8);//八个int元素的数组
		valarray<int> v3(10,8);//8个int元素的数组,每个元素都设置为值10
		valarray<double> v4(gpa,4);//4个元素的数组,初始化为gpa数组的前四个值
	可以创建长度为0的空数组、指定长度的空数组、所有元素都被指定值初始化的数组、
	以及用常规数组中的值进行初始化的数组
6.valarray类方法
	(1)operator[] :通过下标访问数组元素
	(2)size	:返回数组中包含元素的个数
	(3)sum:	返回所有元素的和
	(4)max:	返回最大的元素
	(5)min:	返回最小的元素
		
	
