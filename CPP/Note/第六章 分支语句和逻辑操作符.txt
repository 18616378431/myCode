第六章 分支语句和逻辑操作符

6.1 if语句
1.if语句测试条件会被转换为bool值，0转换为false，非0转换为true
2.整个if,else if(),else结构被视为一条语句
3.cout << char + 1,将char类型转换为整型加1
4.在测试条件中使用3 == int防止未知错误

6.2逻辑表达式
1.|| && 逻辑操作符优先级低于关系操作符

6.2.1 逻辑OR操作符:或 ||
1.一个表达式结果为true，结果为true，全部为false，结果为falses
2.逻辑或||运算顺序为从左至右,先计算左侧表达式值，在判定右侧的值
3.左侧表达式为true，不会去判定右侧表达式

6.2.2 逻辑AND操作符:和 &&
1.仅当全部表达式值为true时,结果为true
2.从左至于顺序执行
3.<操作符从左向右结合

6.2.3 逻辑NOT操作符:!
1.对后面的表达式取反,!(true或非0)为false,!(false或0)位true

6.2.4 逻辑操作符细节
1.!运算符优先级高于所有关系操作符和算数操作符
2.逻辑AND && 操作符优先级高于逻辑OR ||

6.2.5 其他表示方式
1.c语言中需要包含头文件iso646.h,c++中不需要
	&& 	and
	|| 	or
	!	not
	
6.3字符函数库cctype,继承自c语言ctype.h
1.判断字符是否为字母,isalpha(ch),是返回非零,否则返回0
2.判断字符是否为标点符号,ispunct(ch),是返回true
3.库中的函数通常返回int类型,不是bool，bool转换后可视为bool
=============================================================
4.库函数,判断字符类
	(1)isalnum(ch),是否为字母数字,即字母数字,是返回true,否则返回false
	(2)isalpha(ch),是否为字母,是返回true,否则返回false
	(3)isblank(ch),是否为空格或水平制表符,是返回true
	(4)iscntrl(ch),是否为控制字符,是返回true
	(5)isdigit(ch),是否为数字(0-9),是返回true
	(6)isxdigit(ch),是否为16进制数字(0-9,a-f,A-F),是返回true
	(7)isgraph(ch),是否为除空格之外的打印字符,是返回true
	(8)islower(ch),是否为小写字母,是返回true
	(9)isupper(ch),是否为大写字母,是返回true
	(10)isprint(ch),是否为打印字符(包括空格),是返回true
	(11)ispunct(ch),是否为标点符号,是返回true
	(12)isspace(ch),是否为空白字符(空格、换行、回车、水平制表符、垂直制表符),是返回true
	(13)tolower(ch),将字符转换为小写,大写字符返回小写,小写字符返回自身
	(14)toupper(ch),将字符转换为大写,小写字符返回大写,大写字符返回自身
	
6.4 ?:操作符(三目操作符)
1.exp1?exp2:exp3;exp1为真,结果为exp2,否则结果为exp3

6.5 switch语句
1.switch条件必须为整型,每个case标签都必须是整型常量表达式
2.枚举常量和int进行比较是会提升为int
3.switch无法进行浮点测试

6.6 break和continue语句
1.break跳出switch或循环,执行后面的语句
2.continue用于循环中,跳过循环中剩下部分,开始新一轮循环
3.goto语句也可以实现跳出循环或switch,语法:
	goto 标签;
	标签:其他语句;

6.7  读取数字的循环
1.cin读取类型不匹配将导致:
	(1)变量值保持不变
	(2)不匹配的输入将保留在队列中
	(3)cin对象的错误标记被设置
	(4)cin方法的调用返回false
2.cin.clear()方法可重置错误输入标记,错误输入和EOF都将导致cin返回false

6.8 简单文件输入输出

6.8.1 文本I/O和文本文件
1.cin读取char类型只读取一个字符,剩余字符留在队列中,存储字符编码
2.cin读取int类型,不断进行读取直到遇到非数字字符,剩余字符留在输入队列中,
	将数值的二进制编码复制到int
3.cin读取double类型,直到遇到不属于浮点数的字符(空白字符等),
	空白字符成为输入队列中的下一个字符,将浮点数的二进制编码复制到double
4.cin读取到char数组中,不断读取直到遇到空白字符,空格成为输入队列中的下一个字符
	在末尾添加空字符,将字符的字符编码存储到数组中
5.cin.getline(word,50);cin不断读取直到遇到换行符,所有字符都被存储到数组中,并在末尾添加空字符
	换行符被丢弃,输入队列中的第一个字符是下一行的第一个字符

6.8.2 写入到文本文件中
1.文件写入操作对象使用
	(1)包含头文件fstream
	(2)创建ofstream对象
	(3)将ofstream对象通过open和文件关联
	(4)像使用cout一样使用ofstream对象
	(5)使用close()关闭
2.cout,ofstream对象方法,ofstream可使用cout的任何方法
	cout << fixed
	cout.setf(ios_base::showpoint)
	cout.precision(2);
3.ofstream的open方法:默认新建文件,文件存在将文件大小截断为零,
	丢弃原有内容,将新的输入加入到文件中

6.8.3 读取文本文件
1.文件读取操作对象使用
	(1)包含头文件fstream
	(2)创建ifstream对象
	(3)将inFile通过open和文件关联
	(4)和cin使用方法相同
	(5)可以使用eof(),fail()检测输入是否成功
	(6)使用close方法关闭
	(7)使用ifstream对象的get()方法从文件中读取一个字符,使用getline读取一行
	(8)ifstream作为测试条件时读取成功转换为true,否则转换为false
	(9)所有可用于cin对象的操作都可用于ifstream对象
2.调用inFile.is_open()方法检测文件是否打开成功,打开成功返回true,否则返回false
3.ifstream对象:
	eof方法只能检测文件末尾,
	fail方法检测文件是否读取成功,可以检测eof和类型不匹配
	bad(),读取出现问题bad方法返回true,
	good方法在没有发生任何错误时返回true
4.ifstream对象执行读取操作后,inFile >> value返回ifstream对象,
	ifstream作为测试条件时读取成功转换为true,等价于inFile.good()
	



