第十三章 类继承

1.函数库通常不提供源代码,即使提供了源代码在根据特定需求进行修改时也有一定的风险
2.类库包含的数据表示和类方法,比函数库提供了更完整的程序包
3.C++提供了比修改代码更好的方法来扩展和修改类,这种方法叫作类继承(class inheritance)
4.类继承能够从已有的类派生出新的类,派生类继承的原有类(基类)的特征,包括方法
5.可以通过继承完成的一些工作:
	[1]可以在已有类的基础上添加功能,eg:对数组类添加数学运算
	[2]可以给类添加数据,eg:给字符串类派生出一个类并添加输出颜色的数据成员
	[3]可以修改类方法的行为,eg:对基类派生出具有更好功能的类方法
6.继承机制只需提供新特性,甚至不需要访问源代码就可以派生出类
7.类库可能只提供了类方法的头文件和编译后的代码,仍可以使用库中的类派生出新的类

13.1 一个简单的基类
1.从一个类派生出另一个类时,原始类称为基类,继承类称为派生类

13.1.1 派生一个类
1.类的派生
	eg:	class RatedPlayer:public TableTennisPlayer
		{
		private:
			unsigned int rating;//add a data member
		public:
			RatedPlayer(unsigned int r = 0,
					const char * fn = "none",
					const char * ln = "none",
					bool ht = false);
			RatedPlayer(unsigned int r,TableTennisPlayer & tp);
			unsigned int Rating(){return rating;}
			void ResetRating(unsigned int r){rating = r;}
		};
	[1]冒号指出RatedPlayer类的基类是TableTennisPlayer类
	[2]TableTennisPlayer是一个公有基类,这被称为公有派生
	[3]派生类对象包含基类对象
	[4]使用公有派生,基类的公有成员将成为派生类的公有成员,
		基类的私有部分也将成为派生类的一部分
		但只能通过基类的公有和保护方法访问
2.派生类特征:
	[1]派生类对象存储了基类的数据成员(派生类继承了基类的实现)
	[2]派生类对象可以使用基类的方法(派生类继承了基类的接口)
3.需要在继承中添加什么
	[1]派生类需要自己的构造函数
	[2]派生类可以根据需要添加额外的数据成员和成员函数\