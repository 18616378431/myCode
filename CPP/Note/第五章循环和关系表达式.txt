第五章循环和关系表达式

控制cout输出格式:
	cout.setf(ios_base::boolalpha);	//以bool值进行输出
	cout.setf(ios_base::fixed,ios_base:floatfield);	//以浮点数输出，防止E计数法
前缀操作符、后缀操作符:
	前缀:先使用，后修改，递增、递减优先级相同，比前缀操作符优先级高，从左到右结合
	后缀:先修改，后使用，递增、递减、解除引用优先级相同，从右到左结合

副作用(side effect):在计算表达式时，对变量进行了修改
组合赋值操作符: +=、-+、*=、/=、%=
语句块:花括号中的变量只可在代码块中可见
赋值右结合:int cat = (10,240);//cat的值为右侧的240	cat = 17,240;//右侧的值是无效的

关系表达式:可以用于字符、string类对象，不可用于C-风格字符串
结果:真 true	假 false
>、>=、==、<、<=、!=
关系操作符的优先级比算数操作符的优先级低
		字符串比较
cstring头文件中的字符串比较函数:srcmp():字符串相等返回0，ASCII码中，前者排在后者的前面，返回负值，否则返回正值
可以用关系操作符比较字符，因为字符实际上是整数
string类字符串比较可以使用关系运算符，操作符两侧至少有一个操作数为string类对象

			while循环
入口条件循环
string类对象不使用空字符来标记字符串结尾，不同于C-风格字符串 

省略for循环中的测试表达式，结果将为真for(;;)

	延迟循环
头文件:ctime(time.h)
函数:clock();函数返回程序开始执行后所用的系统时间
符号常量:CLOCKS_PER_SEC 每秒钟包含的系统时间数，将系统时间除以该常量，得到秒数，将秒数乘以CLOCKS_PER_SEC得到系统时间
返回值:clock_t类型，编译器将其转换为long或unsigned int

		建立类型别名
预处理器:#define CHAR char
typedef关键字:typedef char BYTE	不会创建新类型

for循环中的空测试条件视为true

cin会忽略输入中的空格和换行

cin.get(ch);读取输入中的下一个字符，包括空白符
cin.get();	两个参数，无参数，一个参数
函数的声明将参数声明为引用&,可以修改传递过来的参数的值

函数重载:C++允许创建多个同名函数，条件是他们的参数列表不同

<符号是UNIX和DOS上的重定向操作符
文件结尾(EOF):
	UNIX:Ctrl+D
	DOS:Ctrl+Z、Enter
检测到EOF后，cin将eofbit和failbit设置为1;
检测到EOF后，cin.eof()返回bool值true，否则返回false
检测到EOF后，cin.fail()返回bool值true，否则返回false
eof和fail报告最近的求结果，在读取后进行检测
EOF标记将停止读取输入
cin.clear()将恢复输入输出

cin出现在需要bool值的地方时，istream中的转换函数将把读取返回的cin对象转换为bool值，读取成功为true
while(cin.get(ch)){	}//包含了结束条件，初始化条件，更新条件


