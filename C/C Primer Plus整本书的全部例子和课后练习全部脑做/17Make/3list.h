////list接口文件
//#ifndef LIST_H_//防止多次包含
//#define LIST_H_
//
////enum BOOL {false,true};
//#define BOOL int
//#define true 1
//#define false 0
//
//#define TSIZE 45
//#define MAXSIZE 100
//
//typedef struct film{
//	char title[TSIZE];
//	int rating;
//}Item;
//
//typedef struct list{
//	Item entries[MAXSIZE];//项目数组
//	int items;//项目个数
//}List;
//
////函数原型
////操作:初始化一个列表
////操作前:plist指向一个列表
////操作后:该列表被初始化为一个空列表
//void InitializeList(List * plist);
//
///*
//操作:确定列表是否为空
//操作前:plist指向一个已初始化的列表
//操作后:如果该列表为空则返回true，否则返回false
//*/
//BOOL ListIsEmpty(const List * plist);
//
///*
//操作:确定列表是否已满
//操作前:plist指向一个已初始化的列表
//操作后:如果该列表已满则返回true，否则返回false
//*/
//BOOL ListIsFull(const List * plist);
//
///*
//操作:确定列表中项目的个数
//操作前:plist指向一个已初始化的列表
//操作后:返回该列表中项目的个数
//*/
//unsigned int ListItemCount(const List * plist);
//
///*
//操作:在列表尾部添加一个项目
//操作前:item是要添加到列表尾部的项目
//		plist指向一个已初始化的列表
//操作后:如果可能的话，向列表末尾添加一个项目
//		函数返回true，否则返回false
//*/
//BOOL AddItem(Item item,List * plist);
//
///*
//操作:把一个函数作用于列表中的每个项目
//操作前:plist指向一个已初始化的列表
//		pfun执行那个一个函数
//		该函数接收一个Item参数并无返回值
//操作后:pfun指向的函数被作用于列表的每一项
//*/
//void Traverse(const List * plist,void (* pfun)(Item item));
//
///*
//操作:释放已分配的内存
//操作前:plist指向一个已初始化的列表
//操作后:为该列表分配的内存已经释放
//		并且该列表被置为空列表
//*/
//void EmptyTheList(List * plist);
//
//#endif