; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.42 

	TITLE	d:\Visual Studio 2005\Projects\16.9\ifdef.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_whyMe
PUBLIC	??_C@_0BB@PHOLGLJ@The?5line?5is?5?$CFd?4?6?$AA@	; `string'
PUBLIC	?__LINE__Var@?1??main@@9@9			; `main'::`2'::__LINE__Var
PUBLIC	??_C@_0BB@LFFGMKCJ@The?5time?5is?5?$CFs?4?6?$AA@ ; `string'
PUBLIC	??_C@_08EBNOBHOO@09?351?327?$AA@		; `string'
PUBLIC	??_C@_0BB@NCOGOAED@The?5date?5is?5?$CFs?4?6?$AA@ ; `string'
PUBLIC	??_C@_0M@DIHCBOHE@Aug?524?52014?$AA@		; `string'
PUBLIC	??_C@_0BB@KAIDAGHI@The?5file?5is?5?$CFs?4?6?$AA@ ; `string'
PUBLIC	??_C@_0CM@BEJGHHFK@d?3?2visual?5studio?52005?2projects?21@ ; `string'
PUBLIC	??_C@_0BG@CNFIIALH@The?5winner?5is?5?$CFs?5?$CFs?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@KOOOCIFH@Grand?5total?5?$DN?5?$CFd?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@JBOPMGKE@i?5?$DN?5?$CFd?0runing?5total?5?$DN?5?$CFd?4?6?$AA@ ; `string'
PUBLIC	??_C@_04DMFAMFJC@kang?$AA@			; `string'
PUBLIC	??_C@_04JJEALPBB@wang?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	__imp__printf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_0BB@PHOLGLJ@The?5line?5is?5?$CFd?4?6?$AA@
; File d:\visual studio 2005\projects\16.9\ifdef.c
CONST	SEGMENT
??_C@_0BB@PHOLGLJ@The?5line?5is?5?$CFd?4?6?$AA@ DB 'The line is %d.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??main@@9@9
_DATA	SEGMENT
?__LINE__Var@?1??main@@9@9 DD 0bH			; `main'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@LFFGMKCJ@The?5time?5is?5?$CFs?4?6?$AA@
CONST	SEGMENT
??_C@_0BB@LFFGMKCJ@The?5time?5is?5?$CFs?4?6?$AA@ DB 'The time is %s.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08EBNOBHOO@09?351?327?$AA@
CONST	SEGMENT
??_C@_08EBNOBHOO@09?351?327?$AA@ DB '09:51:27', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NCOGOAED@The?5date?5is?5?$CFs?4?6?$AA@
CONST	SEGMENT
??_C@_0BB@NCOGOAED@The?5date?5is?5?$CFs?4?6?$AA@ DB 'The date is %s.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DIHCBOHE@Aug?524?52014?$AA@
CONST	SEGMENT
??_C@_0M@DIHCBOHE@Aug?524?52014?$AA@ DB 'Aug 24 2014', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KAIDAGHI@The?5file?5is?5?$CFs?4?6?$AA@
CONST	SEGMENT
??_C@_0BB@KAIDAGHI@The?5file?5is?5?$CFs?4?6?$AA@ DB 'The file is %s.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BEJGHHFK@d?3?2visual?5studio?52005?2projects?21@
CONST	SEGMENT
??_C@_0CM@BEJGHHFK@d?3?2visual?5studio?52005?2projects?21@ DB 'd:\visual '
	DB	'studio 2005\projects\16.9\ifdef.c', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CNFIIALH@The?5winner?5is?5?$CFs?5?$CFs?4?6?$AA@
CONST	SEGMENT
??_C@_0BG@CNFIIALH@The?5winner?5is?5?$CFs?5?$CFs?4?6?$AA@ DB 'The winner '
	DB	'is %s %s.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KOOOCIFH@Grand?5total?5?$DN?5?$CFd?4?6?$AA@
CONST	SEGMENT
??_C@_0BD@KOOOCIFH@Grand?5total?5?$DN?5?$CFd?4?6?$AA@ DB 'Grand total = %'
	DB	'd.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JBOPMGKE@i?5?$DN?5?$CFd?0runing?5total?5?$DN?5?$CFd?4?6?$AA@
CONST	SEGMENT
??_C@_0BL@JBOPMGKE@i?5?$DN?5?$CFd?0runing?5total?5?$DN?5?$CFd?4?6?$AA@ DB 'i'
	DB	' = %d,runing total = %d.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DMFAMFJC@kang?$AA@
CONST	SEGMENT
??_C@_04DMFAMFJC@kang?$AA@ DB 'kang', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JJEALPBB@wang?$AA@
CONST	SEGMENT
??_C@_04JJEALPBB@wang?$AA@ DB 'wang', 00H		; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_winner$ = -96						; size = 64
_total$ = -24						; size = 4
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT

; 11   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 12   : 	int i;
; 13   : 	int total = 0;

	mov	DWORD PTR _total$[ebp], 0

; 14   : 	NAMES winner ={"wang","kang"};

	mov	eax, DWORD PTR ??_C@_04JJEALPBB@wang?$AA@
	mov	DWORD PTR _winner$[ebp], eax
	mov	cl, BYTE PTR ??_C@_04JJEALPBB@wang?$AA@+4
	mov	BYTE PTR _winner$[ebp+4], cl
	xor	eax, eax
	mov	DWORD PTR _winner$[ebp+5], eax
	mov	DWORD PTR _winner$[ebp+9], eax
	mov	DWORD PTR _winner$[ebp+13], eax
	mov	DWORD PTR _winner$[ebp+17], eax
	mov	DWORD PTR _winner$[ebp+21], eax
	mov	DWORD PTR _winner$[ebp+25], eax
	mov	WORD PTR _winner$[ebp+29], ax
	mov	BYTE PTR _winner$[ebp+31], al
	mov	eax, DWORD PTR ??_C@_04DMFAMFJC@kang?$AA@
	mov	DWORD PTR _winner$[ebp+32], eax
	mov	cl, BYTE PTR ??_C@_04DMFAMFJC@kang?$AA@+4
	mov	BYTE PTR _winner$[ebp+36], cl
	xor	eax, eax
	mov	DWORD PTR _winner$[ebp+37], eax
	mov	DWORD PTR _winner$[ebp+41], eax
	mov	DWORD PTR _winner$[ebp+45], eax
	mov	DWORD PTR _winner$[ebp+49], eax
	mov	DWORD PTR _winner$[ebp+53], eax
	mov	DWORD PTR _winner$[ebp+57], eax
	mov	WORD PTR _winner$[ebp+61], ax
	mov	BYTE PTR _winner$[ebp+63], al

; 15   : 	
; 16   : 	for(i = 0;i < LIMIT;i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@main
$LN2@main:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@main:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN1@main

; 17   : 	{
; 18   : 		total += 2 * i * i +1;

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 1
	imul	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _total$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _total$[ebp], edx

; 19   : #ifdef JUST_CHEKING
; 20   : 		printf("i = %d,runing total = %d.\n",i,total);

	mov	esi, esp
	mov	eax, DWORD PTR _total$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BL@JBOPMGKE@i?5?$DN?5?$CFd?0runing?5total?5?$DN?5?$CFd?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 21   : #endif
; 22   : 	}

	jmp	SHORT $LN2@main
$LN1@main:

; 23   : 	printf("Grand total = %d.\n",total);

	mov	esi, esp
	mov	eax, DWORD PTR _total$[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@KOOOCIFH@Grand?5total?5?$DN?5?$CFd?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 24   : 	printf("The winner is %s %s.\n",winner.first,winner.last);

	mov	esi, esp
	lea	eax, DWORD PTR _winner$[ebp+32]
	push	eax
	lea	ecx, DWORD PTR _winner$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BG@CNFIIALH@The?5winner?5is?5?$CFs?5?$CFs?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 25   : 
; 26   : 	printf("The file is %s.\n",__FILE__);//当前源文件名称

	mov	esi, esp
	push	OFFSET ??_C@_0CM@BEJGHHFK@d?3?2visual?5studio?52005?2projects?21@
	push	OFFSET ??_C@_0BB@KAIDAGHI@The?5file?5is?5?$CFs?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 27   : 	printf("The date is %s.\n",__DATE__);//预处理日期

	mov	esi, esp
	push	OFFSET ??_C@_0M@DIHCBOHE@Aug?524?52014?$AA@
	push	OFFSET ??_C@_0BB@NCOGOAED@The?5date?5is?5?$CFs?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 28   : 	printf("The time is %s.\n",__TIME__);//文件编译时间

	mov	esi, esp
	push	OFFSET ??_C@_08EBNOBHOO@09?351?327?$AA@
	push	OFFSET ??_C@_0BB@LFFGMKCJ@The?5time?5is?5?$CFs?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 29   : 	//printf("The version is %s.\n",__STDC_VARSION__);C99标准，__STDC_VARSION__设置C99时为199901L
; 30   : 	printf("The line is %d.\n",__LINE__);//当前行号

	mov	eax, DWORD PTR ?__LINE__Var@?1??main@@9@9
	add	eax, 19					; 00000013H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BB@PHOLGLJ@The?5line?5is?5?$CFd?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 31   : 	//printf("The functon is %s.\n",__func__);
; 32   : 	whyMe();

	call	_whyMe

; 33   : }

	xor	eax, eax
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@main:
	DD	1
	DD	$LN7@main
$LN7@main:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@main
$LN6@main:
	DB	119					; 00000077H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_main	ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BC@KFMHNANB@This?5is?5line?5?$CFd?4?6?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??whyMe@@9@9			; `whyMe'::`2'::__LINE__Var
;	COMDAT ??_C@_0BC@KFMHNANB@This?5is?5line?5?$CFd?4?6?$AA@
CONST	SEGMENT
??_C@_0BC@KFMHNANB@This?5is?5line?5?$CFd?4?6?$AA@ DB 'This is line %d.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??whyMe@@9@9
_DATA	SEGMENT
?__LINE__Var@?1??whyMe@@9@9 DD 024H			; `whyMe'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT _whyMe
_TEXT	SEGMENT
_whyMe	PROC						; COMDAT

; 36   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   : 	//printf("This is function %s.\n",__func__);C99可用，__func__代表当前函数名称的字符串
; 38   : 	printf("This is line %d.\n",__LINE__);

	mov	eax, DWORD PTR ?__LINE__Var@?1??whyMe@@9@9
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BC@KFMHNANB@This?5is?5line?5?$CFd?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 39   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_whyMe	ENDP
_TEXT	ENDS
END
